<?xml version="1.0" encoding="UTF-8" ?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/context
               http://www.springframework.org/schema/context/spring-context.xsd
               http://www.springframework.org/schema/tx
               http://www.springframework.org/schema/tx/spring-tx.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
<!--     <bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="fileEncoding" value="UTF-8" />
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>    -->        
    
    <import resource="classpath:spring/datasource.xml"/>               
    
    <!-- 扫描指定包 -->
    <context:component-scan base-package="com.zyl.ssm">
         <!-- 不扫描注解为controller的类型 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- 注解配置 -->
    <context:annotation-config/>
    
    <!-- 创建mybatis会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 扫描pojo包 使用别名 -->
        <property name="typeAliasesPackage" value="com.zyl.ssm.pojo" />
        <!-- 指定mapper映射路径 -->
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*Mapper.xml"></property>
    </bean>
    
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
        <!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
        <property name="basePackage" value="com.zyl.ssm.dao"></property>
        <!-- 如果是单数据源,则可以省略不写,默认使用sessionFactory.多数据源必须指定 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    
    <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开
        DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败
        <property name="basePackage" value="com.zyl.ssm.dao"></property>
        如果是单数据源,则可以省略不写,默认使用sessionFactory.如果要使用sqlSession,则不能省略
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"></property>
    </bean>  -->   
    <!-- 创建mybatis会话template -->
    <!-- <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg ref="sqlSessionFactory"></constructor-arg>  
    </bean> --> 
    
    
    
    <!-- mybatis事务管理配置 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    
</beans>